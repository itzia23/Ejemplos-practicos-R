---
title: "limpieza de datos"
output: html_document
date: "2023-08-10"
---

```{r, message=FALSE}
library(stringr)
library(readxl)
library(DT)
library(ggplot2)

library(tidyr)
```

```{r, message=FALSE}
tabla <- read_excel("C:/Users/itzi2/Documents/ejemplos/Ejemplos practicos R/datos_energia-taller-con-datos-fotovoltaicas.xlsx")
tabla
```

```{r, message=FALSE}
tabla  %>% datatable (tabla)
```

## Eliminar espación vacios

```{r, message=FALSE}
datos_sin_vacios <- tabla[complete.cases(tabla), ]
datos_sin_vacios %>% datatable(datos_sin_vacios)
```

## Columna a eliminar números y guiones

```{r, message=FALSE}
nombre_columna <- "ID-PLANTA"
```

Eliminar números de los datos. La función gsub("\\d\|-", "", datos\[\[nombre_columna\]\]) reemplaza tanto los dígitos (números) como los guiones en la columna por una cadena vacía.

```{r, message=FALSE}
datos_sin_vacios[[nombre_columna]] <- gsub("\\d|-", "", datos_sin_vacios [[nombre_columna]])
datos_sin_vacios 
```

## Identificación de celdas null

En este código, el paquete readxl se carga usando library(). Luego, el archivo de Excel se lee en R usando la función read_excel(). Las filas con valores nulos se identifican usando la función apply() y la función is.na().

```{r, message=FALSE}
# Identificar las filas con valores nulos
filas_nulas <- which(apply(is.na(datos_sin_vacios), 1, any))
filas_nulas
```

## Identificación de celdas ceros

Las filas con valores cero se identifican usando la función apply() y la comparación datos_excel == 0. Las filas identificadas se almacenan en las variables filas_nulas y filas_cero.

```{r, message=FALSE}
# Identificar las filas con valores cero
filas_cero <- which(apply(datos_sin_vacios == 0, 1, any))
filas_cero
```

## Variables de columnas a minúscula

En este código, el paquete readxl se carga usando library(). Luego, el archivo de Excel se lee en R usando la función read_excel(). Los nombres de las columnas se convierten a minúsculas usando la función tolower(). Los nuevos nombres de las columnas se aplican al objeto datos_excel usando la función colnames(). Finalmente, el archivo de Excel con los nuevos nombres de las columnas se guarda usando la función write.xlsx().

```{r, message=FALSE}
# Convertir los nombres de las columnas a minúsculas
colnames(datos_sin_vacios) <- tolower(colnames(datos_sin_vacios))
datos_sin_vacios
```

## Texto en primera letra mayúscula y las demas siguiente en minuscula

En este código, el paquete R.utils se carga mediante library(R.utils). Un vector de caracteres nombre_columna se crea con dos elementos. La función capitalize() se usa para poner en mayúscula la primera letra de cada palabra en nombre_columna

```{r, message=FALSE}
library(R.utils)
# Capitalize the first letter of each word

nombre_columna <- "tipo"
datos_sin_vacios[[nombre_columna]] <- tolower (datos_sin_vacios[[nombre_columna]]) 


datos_sin_vacios[[nombre_columna]] <- capitalize(datos_sin_vacios[[nombre_columna]])  # Convertir todo a minúsculas
datos_sin_vacios
```

```{r, message=FALSE}
nombre_columna2 <- "id-planta"

# Capitalize the first letter of each word
datos_sin_vacios[[nombre_columna2]] <- tolower (datos_sin_vacios[[nombre_columna2]]) 
datos_sin_vacios[[nombre_columna2]] <- capitalize(datos_sin_vacios[[nombre_columna2]])  # Convertir todo a minúsculas
datos_sin_vacios
```

## Variables Categoricas

Variables Categoricas la función sapply() para verificar el tipo de datos de cada columna. La función is.numeric se utiliza para verificar si una columna tiene el tipo de datos "numeric" con el signo ! le indicamos que nos muestre los q no son numéricos. Las columnas que no contienen números se almacenan en la variable columnas_categoricas.

```{r, message=FALSE}
columnas_categoricas <- sapply(datos_sin_vacios, function(col) all(!is.numeric(col)))
```

```{r, message=FALSE}
datos_categoricos<- datos_sin_vacios[, columnas_categoricas]
datos_categoricos
```

## Variables Numéricas

la función sapply() para verificar el tipo de datos de cada columna. Si una columna tiene el tipo de datos "numeric", entonces se considera que solo contiene números.

Las columnas que solo contienen números se almacenan en la variable columnas_numericas.

```{r, message=FALSE}
columnas_numericas <- sapply(datos_sin_vacios, function(col) all(is.numeric(col)))
```

```{r, message=FALSE}
datos_numericos <- datos_sin_vacios[, columnas_numericas]
datos_numericos
```

## Elinimar columnas de %

En este código, el paquete readxl se carga utilizando library(). Luego, el archivo de Excel se lee en R utilizando la función read_excel(). La función de indexación se utiliza para seleccionar todas las columnas excepto la que se desea eliminar. La columna a eliminar se especifica utilizando la función %in%.

```{r, message=FALSE}
datos_sin_vacios <- datos_sin_vacios[, !colnames(datos_sin_vacios) %in% "%ci"]
datos_sin_vacios
```

```{r, message=FALSE}
datos_sin_vacios <- datos_sin_vacios[, !colnames(datos_sin_vacios) %in% "%gb"]
datatable(datos_sin_vacios)
```


```{r}
datos_sin_vacios <- gather(datos_sin_vacios, key="tipo", value="planta")
datos_sin_vacios
```

